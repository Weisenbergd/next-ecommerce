// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ClothingItem {
  id          Int         @id @default(autoincrement())
  name        String
  description String
  price       Float
  sizes       Size[]
  attributes  Attribute[]
  stocks      Stock[]
  reviews     Review[]
  OrderItem   OrderItem[]
}

model Size {
  id             Int          @id @default(autoincrement())
  value          String
  clothingItemId Int
  clothingItem   ClothingItem @relation(fields: [clothingItemId], references: [id])
  stocks         Stock[]
}

model Attribute {
  id             Int          @id @default(autoincrement())
  key            String
  value          String
  clothingItemId Int
  clothingItem   ClothingItem @relation(fields: [clothingItemId], references: [id])
  stocks         Stock[]
}

model Stock {
  id             Int          @id @default(autoincrement())
  quantity       Int
  clothingItemId Int
  clothingItem   ClothingItem @relation(fields: [clothingItemId], references: [id])
  sizeId         Int
  size           Size         @relation(fields: [sizeId], references: [id])
  attributeId    Int
  attribute      Attribute    @relation(fields: [attributeId], references: [id])
}

model Order {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now())
  totalAmount Float
  items       OrderItem[]
  // Add more fields as needed (e.g., customer, shipping address, status)
}

model OrderItem {
  id             Int          @id @default(autoincrement())
  quantity       Int
  price          Float
  orderId        Int
  order          Order        @relation(fields: [orderId], references: [id])
  clothingItemId Int
  clothingItem   ClothingItem @relation(fields: [clothingItemId], references: [id])
}

model Review {
  id             Int          @id @default(autoincrement())
  content        String
  rating         Int
  createdAt      DateTime     @default(now())
  clothingItemId Int
  clothingItem   ClothingItem @relation(fields: [clothingItemId], references: [id])
}

model Discount {
  id          Int      @id @default(autoincrement())
  code        String   @unique
  description String
  amount      Float
  validFrom   DateTime
  validUntil  DateTime
  // Add more fields as needed (e.g., minimum order amount, usage limit)
}
